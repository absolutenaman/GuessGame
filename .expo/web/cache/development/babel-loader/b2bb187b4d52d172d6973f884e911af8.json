{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport GameScreen from \"./screens/GameScreen\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StartGameScreen from \"./screens/StartGameScreen\";\nimport GameOverScreen from \"./screens/GameOverScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedNumber = _useState2[0],\n      setPickedNumber = _useState2[1];\n\n  var _useState3 = useState(_jsx(StartGameScreen, {\n    onPickNumber: onPickedNumberHandler\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      screen = _useState4[0],\n      setScreen = _useState4[1];\n\n  function GameOverHandler() {\n    console.log(\"inside game over handler\");\n    setScreen(_jsx(GameOverScreen, {}));\n  }\n\n  function blahblah() {\n    console.log(\"blahblah\");\n  }\n\n  function onPickedNumberHandler(data) {\n    setPickedNumber(data);\n    setScreen(_jsx(GameScreen, {\n      value_entered: data,\n      GameOver: onpi\n    }));\n  }\n\n  return _jsx(LinearGradient, {\n    colors: ['#4e0329', '#ddb52f'],\n    style: styles.rootScreen,\n    children: _jsx(ImageBackground, {\n      source: require(\"./images/background.png\"),\n      resizeMode: \"cover\",\n      style: _objectSpread({}, styles.rootScreen),\n      imageStyle: {\n        opacity: 0.15\n      },\n      children: _jsx(SafeAreaView, {\n        style: styles.rootScreen,\n        children: screen\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  rootScreen: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useState","GameScreen","LinearGradient","StartGameScreen","GameOverScreen","App","pickedNumber","setPickedNumber","onPickedNumberHandler","screen","setScreen","GameOverHandler","console","log","blahblah","data","onpi","styles","rootScreen","require","opacity","StyleSheet","create","flex"],"sources":["C:/Users/absol/OneDrive/Desktop/starting-project/React Native GuessGame/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GameScreen from './screens/GameScreen';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { StyleSheet, ImageBackground, SafeAreaView } from 'react-native';\nimport StartGameScreen from './screens/StartGameScreen';\nimport GameOverScreen from './screens/GameOverScreen'\nexport default function App() {\n  const [pickedNumber,setPickedNumber]=useState();\n  const [screen,setScreen]=useState(<StartGameScreen onPickNumber={onPickedNumberHandler}/>);\n  function GameOverHandler()\n  {\n    console.log(\"inside game over handler\");\n    setScreen(<GameOverScreen />);\n  }\n  function blahblah()\n  {\n    console.log(\"blahblah\")\n  }\n  function onPickedNumberHandler(data)\n  {\n    setPickedNumber(data);\n    setScreen(<GameScreen value_entered={data} \n    GameOver={onpi}></GameScreen>)\n  }\n  return (\n    <LinearGradient colors={['#4e0329', '#ddb52f']} style={styles.rootScreen}>\n     <ImageBackground source={require('./images/background.png')}\n      resizeMode=\"cover\"\n      style={{...styles.rootScreen}}\n      imageStyle={{opacity:0.15}}\n     >\n      <SafeAreaView style={styles.rootScreen}>\n      {screen}\n      </SafeAreaView>\n     </ImageBackground>\n     </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  rootScreen:\n  {\n    flex:1,\n  }\n});\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;;AAEA,OAAOC,eAAP;AACA,OAAOC,cAAP;;AACA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAqCL,QAAQ,EAA7C;EAAA;EAAA,IAAOM,YAAP;EAAA,IAAoBC,eAApB;;EACA,iBAAyBP,QAAQ,CAAC,KAAC,eAAD;IAAiB,YAAY,EAAEQ;EAA/B,EAAD,CAAjC;EAAA;EAAA,IAAOC,MAAP;EAAA,IAAcC,SAAd;;EACA,SAASC,eAAT,GACA;IACEC,OAAO,CAACC,GAAR,CAAY,0BAAZ;IACAH,SAAS,CAAC,KAAC,cAAD,KAAD,CAAT;EACD;;EACD,SAASI,QAAT,GACA;IACEF,OAAO,CAACC,GAAR,CAAY,UAAZ;EACD;;EACD,SAASL,qBAAT,CAA+BO,IAA/B,EACA;IACER,eAAe,CAACQ,IAAD,CAAf;IACAL,SAAS,CAAC,KAAC,UAAD;MAAY,aAAa,EAAEK,IAA3B;MACV,QAAQ,EAAEC;IADA,EAAD,CAAT;EAED;;EACD,OACE,KAAC,cAAD;IAAgB,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAAxB;IAAgD,KAAK,EAAEC,MAAM,CAACC,UAA9D;IAAA,UACC,KAAC,eAAD;MAAiB,MAAM,EAAEC,OAAO,2BAAhC;MACC,UAAU,EAAC,OADZ;MAEC,KAAK,oBAAMF,MAAM,CAACC,UAAb,CAFN;MAGC,UAAU,EAAE;QAACE,OAAO,EAAC;MAAT,CAHb;MAAA,UAKC,KAAC,YAAD;QAAc,KAAK,EAAEH,MAAM,CAACC,UAA5B;QAAA,UACCT;MADD;IALD;EADD,EADF;AAaD;AAED,IAAMQ,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,UAAU,EACV;IACEK,IAAI,EAAC;EADP;AAF+B,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}