{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState } from \"react\";\nimport PrimaryButton from \"../UI/PrimaryButton\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from \"../constants/Color\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StartGameScreen = function StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setenteredNumber = _useState2[1];\n\n  function resetHandlerInput() {\n    setenteredNumber(\"\");\n    console.log(\"reset handler called\");\n  }\n\n  function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n\n    if (chosenNumber <= 0 || chosenNumber >= 99 || isNaN(chosenNumber)) {\n      Alert.alert(\"Alert Title\", \"The Number should be between 0 & 99\", [{\n        text: \"OK\",\n        onPress: function onPress() {\n          return resetHandlerInput();\n        }\n      }]);\n      return;\n    }\n\n    onPickNumber(enteredNumber);\n  }\n\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(TextInput, {\n      style: styles.numberInput,\n      maxLength: 2,\n      value: enteredNumber,\n      editable: true,\n      keyboardType: \"number-pad\",\n      onChangeText: function onChangeText(newText) {\n        return setenteredNumber(newText);\n      }\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(PrimaryButton, {\n        onPress: resetHandlerInput,\n        children: \"Reset\"\n      }), _jsx(PrimaryButton, {\n        onPress: confirmInputHandler,\n        children: \"Confirm\"\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  inputContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 100,\n    padding: 16,\n    marginHorizontal: 24,\n    borderRadius: 8,\n    backgroundColor: color.primary500,\n    elevation: 10,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: color.accent500,\n    borderBottomWidth: 2,\n    borderBottomColor: color.accent500,\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    color: \"#ddb52f\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\"\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"names":["React","useState","PrimaryButton","color","StartGameScreen","onPickNumber","enteredNumber","setenteredNumber","resetHandlerInput","console","log","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","onPress","styles","inputContainer","numberInput","newText","buttonContainer","StyleSheet","create","justifyContent","alignItems","marginTop","padding","marginHorizontal","borderRadius","backgroundColor","primary500","elevation","shadowOffset","width","height","shadowOpacity","fontSize","borderBottomColor","accent500","borderBottomWidth","marginVertical","fontWeight","flexDirection"],"sources":["C:/Users/absol/OneDrive/Desktop/starting-project/React Native GuessGame/screens/StartGameScreen.js"],"sourcesContent":["import { View, Text, Alert } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport PrimaryButton from \"../UI/PrimaryButton\";\r\nimport { TextInput, StyleSheet } from \"react-native\";\r\nimport color from \"../constants/Color\";\r\nconst StartGameScreen = ({onPickNumber}) => {\r\n  const [enteredNumber, setenteredNumber] = useState(\"\");\r\n \r\n  function resetHandlerInput()\r\n  {\r\n    setenteredNumber(\"\");\r\n    console.log(\"reset handler called\");\r\n  }\r\n  function confirmInputHandler() {\r\n    let chosenNumber = parseInt(enteredNumber);\r\n\r\n    if (chosenNumber <= 0 || chosenNumber >= 99 || isNaN(chosenNumber)) {\r\n      Alert.alert(\r\n        \"Alert Title\",\r\n      \"The Number should be between 0 & 99\",\r\n      [\r\n        \r\n        { text: \"OK\", onPress: () =>resetHandlerInput()}\r\n      ]\r\n        );\r\n\r\n      return;}\r\n      onPickNumber(enteredNumber);\r\n    \r\n  }\r\n  return (\r\n    <View style={styles.inputContainer}>\r\n      <TextInput\r\n        style={styles.numberInput}\r\n        maxLength={2}\r\n        value={enteredNumber}\r\n        editable={true}\r\n        keyboardType=\"number-pad\"\r\n        onChangeText={(newText)=>setenteredNumber(newText)}\r\n      />\r\n      <View style={styles.buttonContainer}>\r\n        <PrimaryButton onPress={resetHandlerInput}>Reset</PrimaryButton>\r\n        <PrimaryButton onPress={confirmInputHandler}>Confirm</PrimaryButton>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  inputContainer: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 100,\r\n    padding: 16,\r\n    marginHorizontal: 24,\r\n    borderRadius: 8,\r\n    backgroundColor: color.primary500,\r\n    elevation: 10,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n  },\r\n  numberInput: {\r\n    height: 50,\r\n    width: 50,\r\n    fontSize: 32,\r\n    borderBottomColor: color.accent500,\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: color.accent500,\r\n    marginVertical: 8,\r\n    fontWeight: \"bold\",\r\n    color: \"#ddb52f\",\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n\r\nexport default StartGameScreen;\r\n"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP;;;AAEA,OAAOC,KAAP;;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAoB;EAAA,IAAlBC,YAAkB,QAAlBA,YAAkB;;EAC1C,gBAA0CJ,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOK,aAAP;EAAA,IAAsBC,gBAAtB;;EAEA,SAASC,iBAAT,GACA;IACED,gBAAgB,CAAC,EAAD,CAAhB;IACAE,OAAO,CAACC,GAAR,CAAY,sBAAZ;EACD;;EACD,SAASC,mBAAT,GAA+B;IAC7B,IAAIC,YAAY,GAAGC,QAAQ,CAACP,aAAD,CAA3B;;IAEA,IAAIM,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,EAArC,IAA2CE,KAAK,CAACF,YAAD,CAApD,EAAoE;MAClEG,KAAK,CAACC,KAAN,CACE,aADF,EAEA,qCAFA,EAGA,CAEE;QAAEC,IAAI,EAAE,IAAR;QAAcC,OAAO,EAAE;UAAA,OAAKV,iBAAiB,EAAtB;QAAA;MAAvB,CAFF,CAHA;MASA;IAAQ;;IACRH,YAAY,CAACC,aAAD,CAAZ;EAEH;;EACD,OACE,MAAC,IAAD;IAAM,KAAK,EAAEa,MAAM,CAACC,cAApB;IAAA,WACE,KAAC,SAAD;MACE,KAAK,EAAED,MAAM,CAACE,WADhB;MAEE,SAAS,EAAE,CAFb;MAGE,KAAK,EAAEf,aAHT;MAIE,QAAQ,EAAE,IAJZ;MAKE,YAAY,EAAC,YALf;MAME,YAAY,EAAE,sBAACgB,OAAD;QAAA,OAAWf,gBAAgB,CAACe,OAAD,CAA3B;MAAA;IANhB,EADF,EASE,MAAC,IAAD;MAAM,KAAK,EAAEH,MAAM,CAACI,eAApB;MAAA,WACE,KAAC,aAAD;QAAe,OAAO,EAAEf,iBAAxB;QAAA;MAAA,EADF,EAEE,KAAC,aAAD;QAAe,OAAO,EAAEG,mBAAxB;QAAA;MAAA,EAFF;IAAA,EATF;EAAA,EADF;AAgBD,CAzCD;;AA2CA,IAAMQ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,cAAc,EAAE;IACdM,cAAc,EAAE,QADF;IAEdC,UAAU,EAAE,QAFE;IAGdC,SAAS,EAAE,GAHG;IAIdC,OAAO,EAAE,EAJK;IAKdC,gBAAgB,EAAE,EALJ;IAMdC,YAAY,EAAE,CANA;IAOdC,eAAe,EAAE7B,KAAK,CAAC8B,UAPT;IAQdC,SAAS,EAAE,EARG;IASdC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAT;MAAYC,MAAM,EAAE;IAApB,CATA;IAUdC,aAAa,EAAE;EAVD,CADe;EAa/BjB,WAAW,EAAE;IACXgB,MAAM,EAAE,EADG;IAEXD,KAAK,EAAE,EAFI;IAGXG,QAAQ,EAAE,EAHC;IAIXC,iBAAiB,EAAErC,KAAK,CAACsC,SAJd;IAKXC,iBAAiB,EAAE,CALR;IAMXF,iBAAiB,EAAErC,KAAK,CAACsC,SANd;IAOXE,cAAc,EAAE,CAPL;IAQXC,UAAU,EAAE,MARD;IASXzC,KAAK,EAAE;EATI,CAbkB;EAwB/BoB,eAAe,EAAE;IACfsB,aAAa,EAAE;EADA;AAxBc,CAAlB,CAAf;AA6BA,eAAezC,eAAf"},"metadata":{},"sourceType":"module"}